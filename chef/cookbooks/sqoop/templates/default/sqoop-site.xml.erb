<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<!--
  Cookbook: sqoop
  Filename: sqoop-site.xml
 
  Copyright (c) 2011 Dell Inc.
 
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
 
      http://www.apache.org/licenses/LICENSE-2.0
 
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!-- Generated and maintained by Crowbar for <%= @node[:fqdn] %> -->

<configuration>

 <!--
    Set the value of this property to explicitly enable third-party
    ManagerFactory plugins.

    If this is not used, you can alternately specify a set of ManagerFactories
    in the $SQOOP_CONF_DIR/managers.d/ subdirectory.  Each file should contain
    one or more lines like:
      manager.class.name[=/path/to/containing.jar]

    Files will be consulted in lexicographical order only if this property
    is unset.
  -->

<% if node[:sqoop][:sqoop_connection_factories].nil? or node[:sqoop][:sqoop_connection_factories].empty? -%>
  <!-- VALUE NOT SET IN CROWBAR PROPOSAL - USING DEFAULT
<% end -%>
  <property>
    <name>sqoop.connection.factories</name>
    <value><%= node[:sqoop][:sqoop_connection_factories] %></value>
    <description>A comma-delimited list of ManagerFactory implementations which are
      consulted, in order, to instantiate ConnManager instances used
      to drive connections to databases.
    </description>
  </property>
<% if node[:sqoop][:sqoop_connection_factories].nil? or node[:sqoop][:sqoop_connection_factories].empty? -%>
  --> 
<% end -%>

  <!--
    Set the value of this property to enable third-party tools.

    If this is not used, you can alternately specify a set of ToolPlugins
    in the $SQOOP_CONF_DIR/tools.d/ subdirectory.  Each file should contain
    one or more lines like:
      plugin.class.name[=/path/to/containing.jar]

    Files will be consulted in lexicographical order only if this property
    is unset.
  -->

<% if node[:sqoop][:sqoop_tool_plugins].nil? or node[:sqoop][:sqoop_tool_plugins].empty? -%>
  <!-- VALUE NOT SET IN CROWBAR PROPOSAL - USING DEFAULT
<% end -%>
  <property>
    <name>sqoop.tool.plugins</name>
    <value><%= node[:sqoop][:sqoop_tool_plugins] %></value>
    <description>A comma-delimited list of ToolPlugin implementations which are
      consulted, in order, to register SqoopTool instances which
      allow third-party tools to be used.
    </description>
  </property>
<% if node[:sqoop][:sqoop_tool_plugins].nil? or node[:sqoop][:sqoop_tool_plugins].empty? -%>
  --> 
<% end -%>

  <!--
    By default, the Sqoop metastore will auto-connect to a local embedded
    database stored in ~/.sqoop/. To disable metastore auto-connect, uncomment
    this next property.
  -->
  
<% if node[:sqoop][:sqoop_metastore_client_enable_autoconnect].nil? or node[:sqoop][:sqoop_metastore_client_enable_autoconnect].empty? -%>
  <!-- VALUE NOT SET IN CROWBAR PROPOSAL - USING DEFAULT
<% end -%>
  <property>
    <name>sqoop.metastore.client.enable.autoconnect</name>
    <value><%= node[:sqoop][:sqoop_metastore_client_enable_autoconnect] %></value>
    <description>If true, Sqoop will connect to a local metastore for job management
      when no other metastore arguments are provided.
    </description>
  </property>
<% if node[:sqoop][:sqoop_metastore_client_enable_autoconnect].nil? or node[:sqoop][:sqoop_metastore_client_enable_autoconnect].empty? -%>
  -->
<% end -%>

<% if node[:sqoop][:sqoop_metastore_client_autoconnect_url].nil? or node[:sqoop][:sqoop_metastore_client_autoconnect_url].empty? -%>
  <!-- VALUE NOT SET IN CROWBAR PROPOSAL - USING DEFAULT
<% end -%>
  <property>
    <name>sqoop.metastore.client.autoconnect.url</name>
    <value><%= node[:sqoop][:sqoop_metastore_client_autoconnect_url] %></value>
    <description>The connect string to use when connecting to a job-management
      metastore. If unspecified, uses ~/.sqoop/. You can specify a
      different path here.
    </description>
  </property>
<% if node[:sqoop][:sqoop_metastore_client_autoconnect_url].nil? or node[:sqoop][:sqoop_metastore_client_autoconnect_url].empty? -%>
  -->
<% end -%>

  <!--
    The auto-connect metastore is stored in ~/.sqoop/. Uncomment
    these next arguments to control the auto-connect process with
    greater precision.
  -->

<% if node[:sqoop][:sqoop_metastore_client_autoconnect_username].nil? or node[:sqoop][:sqoop_metastore_client_autoconnect_username].empty? -%>
  <!-- VALUE NOT SET IN CROWBAR PROPOSAL - USING DEFAULT
<% end -%>
  <property>
    <name>sqoop.metastore.client.autoconnect.username</name>
    <value><%= node[:sqoop][:sqoop_metastore_client_autoconnect_username] %></value>
    <description>The username to bind to the metastore.
    </description>
  </property>
<% if node[:sqoop][:sqoop_metastore_client_autoconnect_username].nil? or node[:sqoop][:sqoop_metastore_client_autoconnect_username].empty? -%>
  -->
<% end -%>

<% if node[:sqoop][:sqoop_metastore_client_autoconnect_password].nil? or node[:sqoop][:sqoop_metastore_client_autoconnect_password].empty? -%>
  <!-- VALUE NOT SET IN CROWBAR PROPOSAL - USING DEFAULT
<% end -%>
  <property>
    <name>sqoop.metastore.client.autoconnect.password</name>
    <value><%= node[:sqoop][:sqoop_metastore_client_autoconnect_password] %></value>
    <description>The password to bind to the metastore.
    </description>
  </property>
<% if node[:sqoop][:sqoop_metastore_client_autoconnect_password].nil? or node[:sqoop][:sqoop_metastore_client_autoconnect_password].empty? -%>
  -->
<% end -%>

  <!--
    For security reasons, by default your database password will not be stored in
    the Sqoop metastore. When executing a saved job, you will need to
    reenter the database password. Uncomment this setting to enable saved
    password storage. (INSECURE!)
  -->

<% if node[:sqoop][:sqoop_metastore_client_record_password].nil? or node[:sqoop][:sqoop_metastore_client_record_password].empty? -%>
  <!-- VALUE NOT SET IN CROWBAR PROPOSAL - USING DEFAULT
<% end -%>
  <property>
    <name>sqoop.metastore.client.record.password</name>
    <value><%= node[:sqoop][:sqoop_metastore_client_record_password] %></value>
    <description>If true, allow saved passwords in the metastore.
    </description>
  </property>
<% if node[:sqoop][:sqoop_metastore_client_record_password].nil? or node[:sqoop][:sqoop_metastore_client_record_password].empty? -%>
  -->
<% end -%>

  <!--
    SERVER CONFIGURATION: If you plan to run a Sqoop metastore on this machine,
    you should uncomment and set these parameters appropriately.

    You should then configure clients with:
       sqoop.metastore.client.autoconnect.url =
       jdbc:hsqldb:hsql://&lt;server-name&gt;:&lt;port&gt;/sqoop
  -->

<% if node[:sqoop][:sqoop_metastore_server_location].nil? or node[:sqoop][:sqoop_metastore_server_location].empty? -%>
  <!-- VALUE NOT SET IN CROWBAR PROPOSAL - USING DEFAULT
<% end -%>
  <property>
    <name>sqoop.metastore.server.location</name>
    <value><%= node[:sqoop][:sqoop_metastore_server_location] %></value>
    <description>Path to the shared metastore database files. If this is not set, it
      will be placed in ~/.sqoop/.
    </description>
  </property>
<% if node[:sqoop][:sqoop_metastore_server_location].nil? or node[:sqoop][:sqoop_metastore_server_location].empty? -%>
  -->
<% end -%>

<% if node[:sqoop][:sqoop_metastore_server_port].nil? or node[:sqoop][:sqoop_metastore_server_port].empty? -%>
  <!-- VALUE NOT SET IN CROWBAR PROPOSAL - USING DEFAULT
<% end -%>
  <property>
    <name>sqoop.metastore.server.port</name>
    <value><%= node[:sqoop][:sqoop_metastore_server_port] %></value>
    <description>Port that this metastore should listen on.
    </description>
  </property>
<% if node[:sqoop][:sqoop_metastore_server_port].nil? or node[:sqoop][:sqoop_metastore_server_port].empty? -%>
  -->
<% end -%>

</configuration>
